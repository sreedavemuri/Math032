package_list <- c("tidyverse", "readxl", "mosaic", "titanic")
install.packages(package_list)
install.packages("remotes")
remotes::install_github("allisonhorst/palmerpenguins")
library("palmerpenguins")
colnames(penguins)
dim(penguins)
head(penguins)
table(penguins$island)
tail(penguins)
str(penguins)
sex(penguins)
tail(penguins)
table(penguins$sex)
library("tidyverse")
penguins_sample <- read_csv("penguins_sample.csv")
penguins_sample <- read_csv("penguins_sample.csv")
glimpse(penguins_sample)
penguins_sample %>% group_by(island) %>% count()
mean(penguins_sample$flipper_length_mm, na.rm = TRUE)
mean(penguins_sample$flipper_length_mm, sex)
mean(penguins_sample$flipper_length_mm$sex)
mean(penguins_sample$flipper_length_mm, penguins_sample$sex, na.rm = TRUE)
penguins_sample %>% group_by(sex) %>% mean(penguins_sample$flipper_length_mm, na.rm = TRUE)
penguins_sample %>% group_by(sex) %>% count()
penguins_sample %>%
group_by(island) %>%
penguins_sample %>%
penguins_sample %>%
group_by(island) %>%
summarize(mu = mean(flipper_length_mm, na.rm = TRUE))
penguins_sample %>% group_by(island) %>% summarize(mu = mean(flipper_length_mm, na.rm = TRUE))
penguins_sample %>% group_by(sex) %>% summarize(mu = mean(flipper_length_mm, na.rm = TRUE))
penguins_sample %>% group_by(species) %>% summarize(mu = mean(body_mass_g, na.rm = TRUE))
penguins_sample %>% group_by(species) %>% summarize(mu = median(body_mass_g, na.rm = TRUE))
penguins_sample %>% group_by(sex) %>% summarize(mu = median(flipper_length_mm, na.rm = TRUE))
penguins_sample %>% group_by(sex) %>% summarize(mu = mean(body_mass_g, na.rm = TRUE))
penguins_sample %>% group_by(species) %>% summarize(mu = mean(body_mass_g, na.rm = TRUE))
library("tidyverse")
penguins_sample <- read_csv("penguins_sample.csv")
glimpse(penguins_sample)
penguins_sample %>% group_by(island) %>% count()
mean(penguins_sample$flipper_length_mm, na.rm = TRUE)
penguins_sample %>% group_by(island) %>% count()
penguins_sample %>% group_by(species) %>% count()
penguins_sample %>% group_by(sex) %>% count()
library("tidyverse")
penguins_sample <- read_csv("penguins_sample.csv")
glimpse(penguins_sample)
penguins_sample %>% group_by(island) %>% count()
penguins_sample %>% group_by(species) %>% count()
penguins_sample %>% group_by(sex) %>% count()
mean(penguins_sample$flipper_length_mm, na.rm = TRUE)
median(penguins_sample$flipper_length_mm, na.rm = TRUE)
median(penguins_sample$body_mass_g, na.rm = TRUE)
mean(penguins_sample$body_mass_g, na.rm = TRUE)
penguins_sample %>%
group_by(sex) %>%
summarize(mu = mean(flipper_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(sex) %>%
summarize(mu = median(flipper_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = median(body_mass_g, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = mean(body_mass_g, na.rm = TRUE))
median(penguins_sample$bill_length_mm, na.rm = TRUE)
mean(penguins_sample$bill_length_mm, na.rm = TRUE)
penguins_sample %>%
group_by(species) %>%
summarize(mu = mean(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(sex) %>%
summarize(mu = mean(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(sex) %>%
summarize(mu = median(bill_length_mm, na.rm = TRUE))
library("tidyverse")
penguins_sample <- read_csv("penguins_sample.csv")
glimpse(penguins_sample)
penguins_sample %>% group_by(island) %>% count()
penguins_sample %>% group_by(species) %>% count()
penguins_sample %>% group_by(sex) %>% count()
mean(penguins_sample$bill_length_mm, na.rm = TRUE)
median(penguins_sample$bill_length_mm, na.rm = TRUE)
median(penguins_sample$body_mass_g, na.rm = TRUE)
mean(penguins_sample$body_mass_g, na.rm = TRUE)
penguins_sample %>%
group_by(sex) %>%
summarize(mu = median(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(sex) %>%
summarize(mu = mean(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = mean(body_mass_g, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = median(body_mass_g, na.rm = TRUE))
library("tidyverse")
penguins_sample <- read_csv("penguins_sample.csv")
glimpse(penguins_sample)
mean(penguins_sample$flipper_length_mm, na.rm = TRUE)
mean(penguins_sample$bill_length_mm, na.rm = TRUE)
medianan(penguins_sample$bill_length_mm, na.rm = TRUE)
median(penguins_sample$bill_length_mm, na.rm = TRUE)
median(penguins_sample$body_mass_g , na.rm = TRUE)
mean(penguins_sample$body_mass_g , na.rm = TRUE)
penguins_sample %>%
group_by(sex) %>%
summarize(mu = mean(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(sex) %>%
summarize(mu = median(bill_length_mm, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = median(body_mass_g, na.rm = TRUE))
penguins_sample %>%
group_by(species) %>%
summarize(mu = mean(body_mass_g, na.rm = TRUE))
library("tidyverse")
pgeom(6,55)
sum(55)
dbinom(49, 6, p)
dbinom(6, 55, TRUE)
dbinom(6, 55, FALSE)
dbinom(6, 45, FALSE)
pbinom(6, 45, FALSE)
pbinom(6, 55, FALSE)
pbinom(6, 55, TRUE)
pbinom(6, 55, FALSE)
pbinom(4, 55, TRUE)
pbinom(12, 55, TRUE)
pbinom(12, 45, TRUE)
dbinom(7, 12, 55, FALSE)
dbinom(6, 7, 55, FALSE)
dbinom(6, 12, 55)
dbinom(7, 12, 55)
dbinom(5, 12, 55)
dbinom(5, 6, 55)
dbinom(5, 6, 0.55)
dbinom(6, 6, 0.55)
dbinom(6, 12, 0.55)
pbinom(6, 12, 0.55)
pbinom(6, 6, 0.55)
pbinom(5, 6, 0.55)
dbinom(1, 7, 0.55)
dbinom(6, 7, 0.55)
dbinom(6, 6, 0.55)
dgeom(6,0.55)
dbinom(4, 6, 0.55)
pbinom(3, 5, 0.55)
pbinom(2, 5, 0.55)
pgeom(4,0.55)
pgeom(5,0.55)
dgeom(4,0.55)
dgeom(5,0.55)
pgeom(4,0.55)
pgeom(6,0.55)
pgeom(6,0.45)
pgeom(4,0.45)
pgeom(4,0.55)
dgeom(4,0.55)
dgeom(4,0.45)
pgeom(5,0.55)
pgeom(5,0.45)
pbinom(2,7,0.45)
pbinom(3,7,0.45)
dbinom(3, 7, 0.45)
dbinom(2,7,0.45)
dbinom(3,7,0.55)
pbinon(3,7, 0.55)
pbinom(3,7, 0.55)
pbinom(2,7, 0.55)
dbinom(2,7, 0.55)
dgeom(1, 0.54)/0.54
dgeom(0, 0.54)/0.54
1-pbinom(0,5,0.54)
1,5,0.54
1-pbinom(1,5,0.54)
pbinom(1,5,0.54)
dgeom(2, 0.49)
dgeom(3, 0.49)
dbinom(2,5,0.156)
pnorm(x,8,3)
pnorm(9,8,3)
pnorm(9,8,3,lower.tail=FALSE)
pnorm(2,8,3,lower.tail=FALSE)
pnorm(2,4,2,lower.tail=FALSE)
pnorm(1,4,2)
pnorm(1,4,2,lower.tail = FALSE)
pnorm(2,4,2,lower.tail = TRUE)
pnorm(8,8,3,lower.tail = FALSE)
pnorm(5,4,2,lower.tail = FALSE)
pnorm(5,8,3,lower.tail = FALSE)
pnorm(5,4,2,lower.tail = FALSE)
pnorm(8,8,3,lower.tail = TRUE)
pnorm(5,4,2,lower.tail = TRUE)
pnorm(13,8,3,lower.tail = TRUE) - pnorm(2,8,3,lower.tail = TRUE)
pnorm(5,4,2,lower.tail = TRUE) - pnorm(5,4,2,lower.tail = TRUE)
pnorm(78,71.2499,14.8530,lower.tail = TRUE) - pnorm(62,71.2499,14.8530,lower.tail = TRUE)
pnorm(78,63.7975, 9.6149,lower.tail = TRUE) - pnorm(62,63.7975, 9.6149,lower.tail = TRUE)
?(method/command)
pnorm(78,63.7975, 9.6149,lower.tail = TRUE) - pnorm(62,63.7975, 9.6149,lower.tail = TRUE)
?(method/pnorm(78,63.7975, 9.6149,lower.tail = TRUE) - pnorm(62,63.7975, 9.6149,lower.tail = TRUE))
qnorm(0.99,12,3.5)
qnorm(2,1.184,0.587)
pnorm(2,1.184,0.587)
pnorm(4,1.184,0.587,lower.tail~F)
pnorm(4,1.184,0.587,lower.tail~T)
pnorm(4,1.184,0.587,lower.tail=FALSE)
qnorm(0.95,1.184,0.587)
pnorm(0.2)
pnorm(1
)
pnorm(-1
)
0.841344-0.1586553
qnorm(0.1,104,5)
qnorm(0.9,104,5)
qnorm(0.99,104,5)
qnorm(0.01,104,5)
qnorm(0.001,104,5)
qnorm(0.01,104,5)
pnorm(0.01,104,5)
pnorm(0.1,104,5)
pnorm(0)
qnorm(0.0005)
(1- pnorm(1)) - pnorm(-1)
pnorm(109, 104, 5)
(1- pnorm(1)) + pnorm(-1)
qnorm(0.0005, 104, 5)
qnorm(0.0005)
degeom(3, 0.8)
degeom(3,0.8)
dgeom(3,0.8)
0.0064/0.8
dgeom(5,0.34)/0.34
dgeom(4,0.34)/0.34
dgeom(3,0.8)/0.8
1-pgeom(k-1,p)
1-pgeom(4-1,0.8)
1-pgeom(4-1,0.2)
qnorm(0.8,9,2)
pnorm(144, 288, sqr(576))
pnorm(144, 288, sqrt(576))
1- pnorm(144, 288, sqrt(576))
1- pnorm(625, 156.25, 468.75)
1- pnorm(625, 156.25, sqrt(23.43))
1- pnorm(625, 156.25, sqrt(23.4375))
pnorm(625, 156.25, sqrt(23.4375))
pnorm(625, 625/4, 625*3/80)
pnorm(625, 625/4, 625*3)
pnorm(625, 625/4, 625*3/70)
pnorm(625, 625/4, 625*3/7)
pnorm(625, 625/4, 625*3/8)
pnorm(625, 625/4, 625*3/80)
pnorm(625, 625/4, 625*3/80)
pnorm(625, 625/4, 625*3/60)
pnorm(625, 625/4, 625*3/20)
pnorm(-6)
1- pnorm(625, 156.25, 468.75)
pnorm(625, 156.25, 468.75)
pnorm(1)
pnorm(0.9)
pnorm(2)
0.4898^2
pmorm(9.6)
pnorm(9.6)
library("ggplot2")
# This randomly generates 25 random numbers from an U(0,1) distribution
one_sample <- runif(25, 0, 1)
# Note that the population variance formula does not have "n - 1"
bad_var <- function(x){
N <- length(x)
sigma_squared <- sum( (x - mean(x))^2 ) / N
sigma_squared #return this number
}
# Note that the sample variance formula does have "n - 1"
good_var <- function(x){
n <- length(x)
s_squared <- sum( (x - mean(x))^2 ) / (n-1)
s_squared #return this number
}
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_mean <- 1/2
simulation <- replicate(10000, mean( runif(25, 0, 1) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_mean, color = "red") +
labs(title = "Sample Distribution for the Sample Mean",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Math 32",
x = "x",
y = "density")
true_variance <- 32^2/12
simulation <- replicate(10000, bad_var( runif(32,0,32) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_variance, color = "red") +
labs(title = "Sample Distribution for the population variance",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Sreeda Vemuri",
x = "x",
y = "density")
good_variance <- 32^2/12
simulation <- replicate(10000, good_var(runif(32,0,32) ))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = good_variance, color = "red") +
labs(title = "Sample Distribution for the Sample variance",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Sreeda Vemuri",
x = "x",
y = "density")
true_variance <- sqrt(32^2/12)
simulation <- replicate(10000, sqrt(good_var(runif(32,0,32) )))
df <- data.frame(simulation)
ggplot(df, aes(x = simulation)) +
geom_density(color = "blue") +
geom_vline(xintercept = true_variance, color = "red") +
labs(title = "Sample Distribution for the Sample standard deviation",
subtitle = "Blue: sample distribution, Red: statistic of interest",
caption = "Sreeda Vemuri",
x = "x",
y = "density")
setwd("C:/Users/sreed/Desktop/Math 032")
nrow()
libary("Galton Sample")
library("readr")
df<-read_csv("Galton Sample.csv")
df<-read_csv("GaltonSample.csv")
nrow(parent)
nrow()
nrow(n)
nrow(x)
nrow(parents)
nrow(parent)
nrow(col_double())
nrow(col_double
)
nrow(parent
)
nrow(child)
summary(GaltonSample.csv)
summary(GaltonSample)
nrom(df$parent)
nrow(df$parent)
nrow(df$child)
ncol(df$child)
summary(df$child)
summary(df$child)
df<-read_csv("GaltonSample.csv")
summary(df$child)
nrowm(child)
nrow(child)
nrow(df$child)
ncol(df$child)
nrow(df)
summary(df$parent)
model <- lm(y ~ poly(x,d)) #degree d polynomial
summary(model)$adj.r.squared
model <- lm(y ~ poly(x,d))
df <- lm(parents ~ poly(children,d))
model <- lm(sample$child ~ sample$parent)
model <- lm(df$child ~ df$parent)
summary(model)
summary(model)$adj.r.squared
zero_fit <- lm(df$child ~ df$parent - 1, data = df)
summary(zero_fit)$adj.r.squared
exp_fit <- lm(df$child ~ exp(df$parent), data = df)
summary(exp_fit)$adj.r.squared
yhat <- predict(linear_fit, newdata = data.frame(parent = x_value))
yhat <- predict(64, newdata = data.frame(parent = x_value))
yhat <- predict(linear_fit, 64 = data.frame(parent = x_value))
yhat <- predict(64, newdata = data.frame(parent = x_value))
yhat <- predict(linear_fit, newdata = data.frame(parent = x_value))
yhat <- predict(linear_fit, newdata = data.frame(parent = 64))
yhat <- predict(summary(model)$adj.r.squared, newdata = data.frame(parent = 64))
yhat <- predict(linear_fit, newdata = data.frame(parent = x_value))
setwd("C:/Users/sreed/Desktop/Math 032/RExplorations - 7")
df <- lm(parents ~ poly(children,d))
model <- lm(df$child ~ df$parent)
summary(model)$adj.r.squared
